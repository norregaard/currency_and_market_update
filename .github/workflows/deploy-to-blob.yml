name: Generate and Upload HTML to Azure

on:
  schedule:
    - cron: '0 8 * * *' # Runs every day at 08:00 UTC
  workflow_dispatch:    # Allows manual trigger

jobs:
  generate_and_upload:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required for git push and PR creation
      pull-requests: write # Required for creating PRs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all history for branch creation

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run HTML generator script
        run: python scripts/generate_report.py
        env:
          METAL_API_KEY: ${{ secrets.METAL_API_KEY }}
          BLOB_STORAGE_BASE_URL: ${{ secrets.BLOB_STORAGE_BASE_URL }}

      - name: Azure CLI login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Upload all files to Azure Blob
        run: |
          az storage blob upload-batch \
            --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT }} \
            --destination '$web' \
            --source dist \
            --overwrite \
            --auth-mode login

      - name: Configure Git
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"

      - name: Check for changes
        id: check_changes
        run: |
          git add dist/*
          if git diff --staged --quiet; then
            echo "No changes to commit"
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected"
            echo "changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Create branch and commit changes
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          TIMESTAMP=$(date -u +%Y%m%d%H%M%S)
          BRANCH_NAME="update-report-$TIMESTAMP"
          git checkout -b $BRANCH_NAME
          git commit -m "Update report files for $(date -u +%Y-%m-%d)"
          git push origin $BRANCH_NAME
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Pull Request
        if: steps.check_changes.outputs.changes == 'true'
        id: create_pr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Update report files for $(date -u +%Y-%m-%d)"
          title: "Daily Report Update for $(date -u +%Y-%m-%d)"
          body: "Automated update of report files generated by GitHub Actions."
          branch: update-report-${{ github.event_name == 'workflow_dispatch' && github.run_id || format('{0}', github.event.schedule || 'manual') }}-${{ github.run_id }}
          base: main
          delete-branch: true # Delete the branch after PR is merged
        continue-on-error: true # Allow workflow to continue even if PR creation fails

      - name: Debug PR Creation
        if: steps.create_pr.outcome != 'success'
        run: |
          echo "PR creation failed. Check the logs for details."
          echo "PR creation outcome: ${{ steps.create_pr.outcome }}"
          echo "PR creation outputs: ${{ toJSON(steps.create_pr.outputs) }}"